// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_BATTLEEXIT_DEMOBATTLE_H_
#define FLATBUFFERS_GENERATED_BATTLEEXIT_DEMOBATTLE_H_

#include "flatbuffers/flatbuffers.h"


namespace DemoBattle {

struct BattleExit;

struct BattleExit FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  const flatbuffers::String *battle_key() const { return GetPointer<const flatbuffers::String *>(4); }
  int32_t player_id() const { return GetField<int32_t>(6, 0); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, 4 /* battle_key */) &&
           verifier.Verify(battle_key()) &&
           VerifyField<int32_t>(verifier, 6 /* player_id */) &&
           verifier.EndTable();
  }
};

struct BattleExitBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_battle_key(flatbuffers::Offset<flatbuffers::String> battle_key) { fbb_.AddOffset(4, battle_key); }
  void add_player_id(int32_t player_id) { fbb_.AddElement<int32_t>(6, player_id, 0); }
  BattleExitBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  BattleExitBuilder &operator=(const BattleExitBuilder &);
  flatbuffers::Offset<BattleExit> Finish() {
    auto o = flatbuffers::Offset<BattleExit>(fbb_.EndTable(start_, 2));
    return o;
  }
};

inline flatbuffers::Offset<BattleExit> CreateBattleExit(flatbuffers::FlatBufferBuilder &_fbb,
   flatbuffers::Offset<flatbuffers::String> battle_key = 0,
   int32_t player_id = 0) {
  BattleExitBuilder builder_(_fbb);
  builder_.add_player_id(player_id);
  builder_.add_battle_key(battle_key);
  return builder_.Finish();
}

inline const DemoBattle::BattleExit *GetBattleExit(const void *buf) { return flatbuffers::GetRoot<DemoBattle::BattleExit>(buf); }

inline bool VerifyBattleExitBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<DemoBattle::BattleExit>(); }

inline void FinishBattleExitBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<DemoBattle::BattleExit> root) { fbb.Finish(root); }

}  // namespace DemoBattle

#endif  // FLATBUFFERS_GENERATED_BATTLEEXIT_DEMOBATTLE_H_
